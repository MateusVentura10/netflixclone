{"version":3,"sources":["js/Tmdb.js","components/header/Header.jsx","components/featuredMovie/FeaturedMovie.jsx","components/movieList/MovieList.jsx","components/footer/Footer.jsx","components/app/App.jsx","index.js"],"names":["API_KEY","basicFetch","url","a","fetch","req","json","response","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","props","useState","blackHeader","setBlackHeader","useEffect","scroll","window","scrollY","background","addEventListener","removeEventListener","style","className","href","src","FeaturedMovie","movie","movies","count","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","class","vote_average","first_air_date","slice","number_of_seasons","overview","genres","map","genre","length","name","MovieList","moviesList","key","results","i","poster_path","App","movieList","setMoveList","featuredMovie","setFeaturedMovie","getMovieList","list","featured","filter","chosem","Math","floor","random","featuredChosem","id","chosemInfo","Tmdb","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5526a57.chunk.js","sourcesContent":["const API_KEY = \"e2981e820f70ee56d277ed10dcb2fee6\";\r\nconst API_BASE = \"https://api.themoviedb.org/3\";\r\n\r\nconst basicFetch = async (url) => {\r\n    const req = await fetch(`${API_BASE}${url}`);\r\n    const response = await req.json();\r\n\r\n    return response;\r\n}\r\n\r\nexport default {\r\n\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: \"originals\",\r\n                title: \"Originais do Netflix\",\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: \"trending\",\r\n                title: \"Recomendados para Você\",\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: \"top rated\",\r\n                title: \"Em Alta\",\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: \"action\",\r\n                title: \"Ação\",\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: \"comedy\",\r\n                title: \"Comédia\",\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: \"horror\",\r\n                title: \"Terror\",\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: \"romance\",\r\n                title: \"Romance\",\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: \"documentary\",\r\n                title: \"Documentário\",\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ];\r\n    },\r\n\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;\r\n\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;\r\n                \r\n                default:\r\n                    info = null;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './Header.css';\r\n\r\nexport default (props) => {\r\n    const [blackHeader, setBlackHeader] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        const scroll = () => {\r\n            if(window.scrollY > 10){\r\n                setBlackHeader({background: '#141414'});\r\n\r\n            } else {\r\n                setBlackHeader({});\r\n            }\r\n        }\r\n\r\n        window.addEventListener('scroll', scroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', scroll);\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <header style={blackHeader}>\r\n            <a className=\"logo\" href=\"/\">\r\n                <img className=\"logo\" src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\"></img>\r\n            </a>\r\n\r\n            <a className=\"user\" href=\"/\">\r\n                <img className=\"logo\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"></img>\r\n            </a>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nconst FeaturedMovie = (props) => {\r\n    const movie = props.movies;\r\n    let count = 1;\r\n\r\n    return(\r\n        <section className=\"featured--area\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${movie.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--info\">\r\n                        <div>\r\n                            <h1 className=\"featured--title\">{movie.original_name}</h1>\r\n\r\n                            <span class=\"featured--data\">\r\n                                <span className=\"featured--average\">{movie.vote_average + ' pontos'}</span>\r\n                                <span className=\"featured--date\">{movie.first_air_date.slice(0,4)}</span>\r\n                                <span className=\"featured--seasons\">\r\n                                    {movie.number_of_seasons > 1 \r\n                                        ? movie.number_of_seasons + ' temporadas'\r\n                                        : movie.number_of_seasons + ' temporada'\r\n                                    }\r\n                                </span>\r\n                            </span>\r\n\r\n                            <p className=\"featured--description\">{movie.overview.slice(0,250) + \"...\"}</p>\r\n\r\n                            <div className=\"featured--btn\">\r\n                                <a className=\"featured--watch\" href=\"\">► Assistir</a>\r\n                                <a className=\"featured--myList\" href=\"\">+ Minha lista</a>\r\n                            </div>\r\n                            \r\n                            <div className=\"featured--genres\">\r\n                                <h5><strong>Gêneros: </strong></h5>\r\n                                <span>{\r\n                                    movie.genres.map(genre => {\r\n                                        if(movie.genres.length == count) return genre.name;\r\n                                        else{\r\n                                            count++;\r\n                                            return genre.name + \", \";\r\n                                        }\r\n                                    })\r\n                                }</span> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FeaturedMovie;","import React, { useState, useEffect } from 'react';\r\nimport './MovieList.css';\r\n\r\nconst MovieList = props =>{\r\n    const moviesList = props.movies;\r\n\r\n\r\n    return (\r\n        <section className=\"movieList--content\">\r\n            {\r\n                moviesList.map((movies, key) => {\r\n                   return (\r\n                       <div className=\"movieList--area\" key={key}>\r\n                           <h2>{movies.title}</h2>\r\n\r\n                           <div className=\"movieList--list\">\r\n                                <div className=\"movieList--left\">\r\n                                    <i class=\"fas fa-chevron-left\"></i>\r\n                                </div>\r\n                                <div className=\"movieList--right\">\r\n                                    <i class=\"fas fa-chevron-right\"></i>\r\n                                </div>\r\n                               {\r\n                                    movies.items.results.map((movie, i) => {\r\n                                        return (\r\n                                            <div className=\"movieList--item\"  key={i}>\r\n                                                <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} />     \r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                               }\r\n                           </div>\r\n                       </div>\r\n                   )\r\n                })\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <footer>\r\n            <span>Site desenvolvido para fins de estudo</span>\r\n            <span>Direitos de imagem para <strong>Netflix</strong></span>\r\n            <span>Dados pegados de <strong>themoviedb.org</strong></span>\r\n        </footer>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from '../../js/Tmdb';\nimport Header from '../header/Header';\nimport FeaturedMovie from '../featuredMovie/FeaturedMovie';\nimport MovieList from '../movieList/MovieList';\nimport Footer from '../footer/Footer';\n\nconst App = () => {\n\n  const [movieList, setMoveList] = useState([]);\n  const [featuredMovie, setFeaturedMovie] = useState(null);\n\n  useEffect(() => {\n\n    /* get movies */\n    const getMovieList = async (list) => {\n      const movies = await list.getHomeList();\n      setMoveList(movies);\n\n      /* get featured */\n      const featured = movies.filter(movie => movie.slug === \"originals\");\n      const chosem = Math.floor(Math.random() * (featured[0].items.results.length - 1));\n      const featuredChosem = featured[0].items.results[chosem];\n\n      const chosemInfo = await list.getMovieInfo(featuredChosem.id, 'tv');\n      setFeaturedMovie(chosemInfo);\n    };\n\n    getMovieList(Tmdb);\n\n  }, []);\n\n  return (\n    <div>\n\n      <Header />\n\n      <main>\n\n        {featuredMovie &&\n          <FeaturedMovie movies={featuredMovie} />\n        }\n\n        <MovieList movies={movieList} />\n\n      </main>\n\n      <Footer />\n\n      {movieList.length <= 0 &&\n        <div className=\"loading\">\n            <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\"></img>\n        </div>\n      }\n    </div>\n  )\n} \n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}